<application>
  <component name="AppStorage">
    <histories>
      <item value="ALBUM" />
      <item value="intercept" />
      <item value="Album" />
      <item value="Aulbum" />
      <item value="model" />
      <item value="radio" />
      <item value="unknown" />
      <item value="unknow" />
      <item value="coustom" />
      <item value="Punch" />
      <item value="Used to identify the creator of this token, for example the class name. * Instead of creating multiple tokens with the same descriptor, consider adding a suffix to * help identify them." />
      <item value="Set the type of scaling applied on the captured visualization data." />
      <item value="Defines a measurement mode which computes the peak and RMS value in mB, where 0mB is the * maximum sample value, and -9600mB is the minimum value. * Values for peak and RMS can be retrieved with" />
      <item value="Wave To" />
      <item value="转换器" />
      <item value="转换" />
      <item value="频率" />
      <item value="array of bytes containing the frequency representation" />
      <item value="Queues audio data between the position and limit of the input {@code buffer} for processing. * {@code buffer} must be a direct byte buffer with native byte order. Its contents are treated as * read-only. Its position will be advanced by the number of bytes consumed (which may be zero). * The caller retains ownership of the provided buffer. Calling this method invalidates any * previous buffer returned by {@link #getOutput()}." />
      <item value="A sink for audio buffers that writes output audio as .wav files with a given path prefix. When * new audio data is handled after flushing the audio processor, a counter is incremented and its * value is appended to the output file name. * * &lt;p&gt;Note: if writing to external storage it's necessary to grant the {@code * WRITE_EXTERNAL_STORAGE} permission." />
      <item value="Instructs the Kotlin compiler to generate overloads for this function that substitute default parameter values." />
      <item value="Instruction" />
      <item value="Instruction Distribute" />
      <item value="Distribute" />
      <item value="concentrate" />
      <item value="语言" />
      <item value="his is outside the if statement below on purpose; we want this to run // even if we do a moveToState from CREATED =&gt; *, CREATED =&gt; CREATED, and // * =&gt; CREATED as part of the case fallthrough above." />
      <item value="dissmiss" />
      <item value="Called when the message queue has run out of messages and will now * wait for more. Return true to keep your idle handler active, false * to have it removed. This may be called if there are still messages * pending in the queue, but they are all scheduled to be dispatched * after the current time." />
      <item value="Gear" />
      <item value="Limite" />
      <item value="detached" />
      <item value="活动" />
      <item value="UNKNOW" />
      <item value="UNKNOWN" />
      <item value="困了嘛，休息一下吧" />
      <item value="轻度" />
      <item value="fer" />
      <item value="Spinner" />
      <item value="观察者" />
      <item value="AMERACIA" />
      <item value="public" />
      <item value="分割线" />
      <item value="水平" />
      <item value="横" />
      <item value="Configure this client to retry or not when a connectivity problem is encountered. By default, * this client silently recovers from the following problems: * &lt;ul&gt; * &lt;li&gt;&lt;strong&gt;Unreachable IP addresses.&lt;/strong&gt; If the URL's host has multiple IP addresses, * failure to reach any individual IP address doesn't fail the overall request. This can * increase availability of multi-homed services. * &lt;li&gt;&lt;strong&gt;Stale pooled connections.&lt;/strong&gt; The {@link ConnectionPool} reuses sockets * to decrease request latency, but these connections will occasionally time out. * &lt;li&gt;&lt;strong&gt;Unreachable proxy servers.&lt;/strong&gt; A {@link ProxySelector} can be used to * attempt multiple proxy servers in sequence, eventually falling back to a direct * connection. * &lt;/ul&gt; * Set this to false to avoid retrying requests when doing so is destructive. In this case the * calling application should do its own recovery of connectivity failures." />
      <item value="on Fail" />
      <item value="The queue used for holding tasks and handing off to worker * threads. We do not require that workQueue.poll() returning * null necessarily means that workQueue.isEmpty(), so rely * solely on isEmpty to see if the queue is empty (which we must * do for example when deciding whether to transition from * SHUTDOWN to TIDYING). This accommodates special-purpose * queues such as DelayQueues for which poll() is allowed to * return null even if it may later return non-null when delays * expire." />
      <item value="超出范围" />
      <item value="logging in…" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="94" />
        <entry key="ENGLISH" value="410" />
        <entry key="CHINESE_TRADITIONAL" value="101" />
        <entry key="ALBANIAN" value="1" />
        <entry key="FRENCH" value="5" />
        <entry key="LATIN" value="1" />
        <entry key="SPANISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="CHINESE_TRADITIONAL" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5035e0423bd01874" />
      </youdao-translate>
    </option>
  </component>
</application>